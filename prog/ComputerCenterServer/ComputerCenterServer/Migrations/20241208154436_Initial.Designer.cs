// <auto-generated />
using System;
using ComputerCenterServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComputerCenterServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241208154436_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ComputerCenterServer.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Manufacture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Manufactures");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Id_Customer")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("Id_Manufacture")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Id_Provider")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ManufactureId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ManufactureId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Provider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.PurchasedProduct", b =>
                {
                    b.Property<Guid>("Id_Order")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Id_Product")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id_Order", "Id_Product");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("PurchasedProducts");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.PurchasedServices", b =>
                {
                    b.Property<Guid>("Id_Order")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Id_Services")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("ServicesId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id_Order", "Id_Services");

                    b.HasIndex("OrderId");

                    b.HasIndex("ServicesId");

                    b.ToTable("PurchasedServices");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Services", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Order", b =>
                {
                    b.HasOne("ComputerCenterServer.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Product", b =>
                {
                    b.HasOne("ComputerCenterServer.Models.Manufacture", "Manufacture")
                        .WithMany("Products")
                        .HasForeignKey("ManufactureId");

                    b.HasOne("ComputerCenterServer.Models.Provider", "Provider")
                        .WithMany("Products")
                        .HasForeignKey("ProviderId");

                    b.Navigation("Manufacture");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.PurchasedProduct", b =>
                {
                    b.HasOne("ComputerCenterServer.Models.Order", "Order")
                        .WithMany("PurchasedProduct")
                        .HasForeignKey("OrderId");

                    b.HasOne("ComputerCenterServer.Models.Product", "Product")
                        .WithMany("PurchasedProduct")
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.PurchasedServices", b =>
                {
                    b.HasOne("ComputerCenterServer.Models.Order", "Order")
                        .WithMany("PurchasedServices")
                        .HasForeignKey("OrderId");

                    b.HasOne("ComputerCenterServer.Models.Services", "Services")
                        .WithMany("PurchasedServices")
                        .HasForeignKey("ServicesId");

                    b.Navigation("Order");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Manufacture", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Order", b =>
                {
                    b.Navigation("PurchasedProduct");

                    b.Navigation("PurchasedServices");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Product", b =>
                {
                    b.Navigation("PurchasedProduct");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Provider", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ComputerCenterServer.Models.Services", b =>
                {
                    b.Navigation("PurchasedServices");
                });
#pragma warning restore 612, 618
        }
    }
}
